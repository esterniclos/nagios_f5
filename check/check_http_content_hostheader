#!/usr/bin/perl

#
# # check_http_content_hostheader
#
# Checks http or https page, and returns if certain string is contained.
#
#
# Based on:
#
#------------------------------------------------------------------------------
# check_http_content
# 	retrieve an http/s url and checks its content for a given expression
# 	if the expression is found exits with OK, otherwise exits with CRITICAL
#
# Copyright 2007, CAPSiDE SL	http://www.capside.com
# Licensed under GPLv2
#     This program is free software; you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation; either version 2 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
# 
#     You should have received a copy of the GNU General Public License
#     along with Opsview; if not, write to the Free Software
#     Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# -----------------------------------------------------------------------------

use strict;
use Getopt::Std;
use LWP::UserAgent;

my $plugin_name = 'check_http_content_hostheader';
my $VERSION		= '0.01';

# getopt module config
$Getopt::Std::STANDARD_HELP_VERSION = 1;

# nagios exit codes
use constant EXIT_OK		=> 0;
use constant EXIT_WARNING	=> 1;
use constant EXIT_CRITICAL	=> 2;
use constant EXIT_UNKNOWN	=> 3;


# To enable debug, debug = 1
use constant DEBUG => 1;

# parse cmd opts
my %opts;
getopts('vU:t:m:h:', \%opts);
$opts{t} = 60 unless (defined $opts{t});
if (not (defined $opts{U} and defined $opts{m})) {
	print "ERROR: INVALID USAGE\n";
	HELP_MESSAGE();
	exit EXIT_CRITICAL;
}

my $status = EXIT_OK;
# set trx timeout 
my $ua = LWP::UserAgent->new;
$ua->timeout($opts{t});

# If new host header is defined:
# change host header:
my $new_host_header = $opts{h} ;
if ($new_host_header) {
   $ua->default_header('HOST' => $new_host_header);
}



# retrieve url
my $response = $ua->get($opts{U});

# debug

if ( DEBUG ==  1) {
 open (FILE, ">> /var/log/nagios/nagios.log");
 print FILE $opts{U}," ",$opts{m}," ",$opts{h},"\n";
 close (FILE);
}




if (not $response->is_success) {
	print "ERROR: CANNOT RETRIEVE URL: ", $response->status_line, "\n";
	$status = EXIT_UNKNOWN;
} else {
	my $content = $response->content;
	if ($content =~ m/$opts{m}/gsm) {
		print "CONTENT OK: EXPR FOUND","\n";
		$status = EXIT_OK;
	} else {
		my @output_lines = split(/\n/, $content);
		print "CONTENT ERROR: EXPR NOT FOUND \n";
		$status = EXIT_CRITICAL;
	}
}

exit $status;



sub HELP_MESSAGE 
{
	print <<EOHELP
	Retrieve an http/s URL and looks in its output for a given text. 
	Returns CRITICAL is not found, OK if found, UNKNOWN otherwise.
	
	--help      shows this message
	--version   shows version information

	-U          URL to retrieve (http or https)
	-m <text>   Text to match in the output of the URL
	-t          Timeout in seconds to wait for the URL to load. If the page fails to load, 
	            $plugin_name will exit with UNKNOWN state (default 60)
	-h <text>   Change host header in url get http request

EOHELP
;
}


sub VERSION_MESSAGE 
{
	print <<EOVM
$plugin_name v. $VERSION
Copyright 2007, CAPSiDE SL - http://www.capside.com - Licensed under GPLv2
Modified to accept host header

EOVM
;
}
